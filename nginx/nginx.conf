events {
    worker_connections 1024;
}

http {
    upstream frontend {
        server frontend:3000;
    }

    upstream backend {
        server backend:5000;
    }

    upstream zitadel {
        server zitadel:8080;
    }

    # Increase buffer sizes for Zitadel's responses
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    server {
        listen 80;
        server_name localhost;
        
        # Enable detailed logging
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log debug;

        # Zitadel gRPC-web API endpoints (must come first for exact matching)
        location ~ ^/zitadel\. {
            proxy_pass http://zitadel;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Zitadel-Forwarded "true";
            
            # gRPC-web specific headers
            proxy_set_header Content-Type $content_type;
            
            # Increase timeouts for gRPC
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # Zitadel well-known endpoints (OIDC discovery, JWKS, etc.)
        location /.well-known/ {
            proxy_pass http://zitadel;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Zitadel-Forwarded "true";
        }

        # Zitadel OAuth and OIDC endpoints (at root level per OIDC discovery)
        # These must come BEFORE the catch-all / location
        location ~ ^/(oauth|oidc|assets|ui|device|saml|debug)/ {
            proxy_pass http://zitadel;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Zitadel specific
            proxy_set_header X-Zitadel-Forwarded "true";
            
            # Increase timeouts for auth flows
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # Zitadel discovery and other endpoints under /zitadel prefix
        location /zitadel/ {
            rewrite ^/zitadel/(.*) /$1 break;
            
            proxy_pass http://zitadel;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Zitadel specific
            proxy_set_header X-Zitadel-Forwarded "true";
            
            # Increase timeouts for auth flows
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # Backend API - NestJS
        location /api/ {
            proxy_pass http://backend/api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Handle CORS
            proxy_set_header Access-Control-Allow-Origin *;
        }
        
        # Frontend - Next.js App (catch-all, must be last)
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
        }
    }
}
