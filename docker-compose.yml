services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    networks:
      - sms-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5001:5000"
    environment:
      - NODE_ENV=production
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=sms_db
      - JWT_SECRET=your_jwt_secret_key_here
      - JWT_EXPIRES_IN=1d
      # Super Admin Configuration
      - SUPERADMIN_USERNAME=${SUPERADMIN_USERNAME:-meesum}
      - SUPERADMIN_EMAIL=${SUPERADMIN_EMAIL:-meesum@example.com}
      - SUPERADMIN_PASSWORD=${SUPERADMIN_PASSWORD:-ChangeMe123!}
      # Ensure these are not overridden by .env file
      - SUPERADMIN_USERNAME
      - SUPERADMIN_EMAIL
      - SUPERADMIN_PASSWORD
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - sms-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sms_db
      # Super Admin Configuration
      SUPERADMIN_USERNAME: meesum
      SUPERADMIN_EMAIL: meesum@example.com
      SUPERADMIN_PASSWORD: ${SUPERADMIN_PASSWORD:-ChangeMe123!}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - sms-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d sms_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - sms-network

networks:
  sms-network:
    driver: bridge

volumes:
  postgres_data:
